            JavaScript  Execution  Context

1.Global Execution Context -----> this
2.Function Execution Context
3.Eval Execution Context


Example:

let val1 = 10;
let val2 = 5;
Function addNum(num1,num2){
    let total = num1 + num2;
    return total;
}
let result1 = addNum(val1,val2);
let result2 = addNum(10,2);

Explanation: How does JavaScript execute code

1.Global Execution ------> this

2.Memory Phase :  val1 ------> undefined
                  val2 ------> undefined
                  addNum ----> defination
                  result1 ---> undefined
                  result2 ---> undefined

3.Execution Phase : val1 <------- 10
                    val2 <------- 5
                    addNum -----> New Variable Environment + Execution Thread
                                                |
                                                |
                                                |
                        ------------------------------------------------
                        |                                               |
                    Memory Phase                                  Execution Context

                    val1 ---> undefined                           num1 ---> 10
                    val2 ---> undefined                           num2 ---> 5
                    total --> undefined                           total ---> 15

Now total returns to Global Execution.Then New Variable Environment + Execution Thread deleted.             